import java.io.File;
import java.io.FileNotFoundException;
import java.util.HashMap;
import java.util.Scanner;
import java.util.Set;
import java.util.TreeMap;
public class part1Treemap {
private static Scanner inScrable;

public static void main(String[] args) throws FileNotFoundException {
	
		try {
		TreeMap<String,Integer> tmap = new TreeMap<String,Integer>();
		File input = new File("scrable.txt");
		
		inScrable = new Scanner(input);
	    long startTime1 = System.nanoTime();
		while(inScrable.hasNextLine()) {
			String line = inScrable.nextLine();
			String[] parts = line.split(":");
			
			String key = parts[0];
			Integer value = Integer.parseInt(parts[1]);
			tmap.put(key,value);
		}
		long estimatedTime1 = System.nanoTime() - startTime1;
		
		System.out.print("TreeMap:" +tmap);
		System.out.println("\nLoading time :" + estimatedTime1);
		
		File textFile = new File("text.txt");
		Scanner inText = new Scanner(textFile);
		HashMap<String,Integer> phrase = new HashMap<String,Integer>();
		System.out.println("\nWord\t\tPoint Value");
		long startTime3 = System.nanoTime();
		while(inText.hasNextLine()) {
			String l = inText.nextLine();
			l = l.toUpperCase().trim();
			int sum = 0;
			phrase.put(l,sum);
			int i=0;
			
			Set<String> v = tmap.keySet();
			for(String vl: v) {
				if(l.contains(vl)) {
					sum += tmap.get(vl);
				}
			}
		System.out.println(l+"\t\t"+sum);
		}
		long estimatedTime3 = System.nanoTime() - startTime1;
		System.out.println("\nSearching time :" + estimatedTime3);
		inScrable.close();
		inText.close();
		return;
		}
		catch(Exception e) {
			e.printStackTrace();
		}
		
}

}
